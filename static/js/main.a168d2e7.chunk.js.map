{"version":3,"sources":["components/Header/Header.js","pages/Step1/Step1.js","pages/Step2/Step2.js","pages/Step3/Step3.js","pages/Review/Review.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","navAction","className","Step1","useState","key","name","dataMeal","numPeople","setNumPeople","meal","setMeal","action","method","required","value","onChange","event","target","handleChangeMeal","map","type","min","max","handleChangeNumPeople","Step2","dataRestaurant","setDataRestaurant","dishe","setDishe","useEffect","dishes","forEach","availableMeals","indexOf","restaurant","push","handleChangeDishe","id","onClick","history","Step3","dataDish","setDataDish","dish","setDish","numServing","setNumServing","handleChangeDish","handleChangeNumServing","Review","style","minWidth","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a168d2e7.chunk.js","sourcesContent":["import React from \"react\";\nimport './Header.css';\nfunction Header(props) {\n return (\n    <header>\n        <table>\n          <tbody>\n            <tr>\n              {props.navAction === 'actionStep1' ? <td className=\"active\"><span>Step 1</span></td> : <td><span>Step 1</span></td>}\n              {props.navAction === 'actionStep2' ? <td className=\"active\"><span>Step 2</span></td> : <td><span>Step 2</span></td>}\n              {props.navAction === 'actionStep3' ? <td className=\"active\"><span>Step 3</span></td> : <td><span>Step 3</span></td>}\n              {props.navAction === 'actionReview' ? <td className=\"active\"><span>Review</span></td> : <td><span>Review</span></td>}\n            </tr>\n          </tbody>\n        </table>\n    </header>\n  );\n}\n\nexport default Header;","import React, {useState} from 'react';\nimport Header from '../../components/Header/Header';\n\nfunction Step1() {\n  const [dataMeal, setDataMeal] = useState([\n    { key: \"breakfast\", name: \"Breakfast\" },\n    { key: \"lunch\", name: \"Lunch\" },\n    { key: \"dinner\", name: \"Dinner\" },\n  ]);\n  const [numPeople, setNumPeople] = useState('1');\n  const [meal, setMeal] = useState('breakfast');\n  const handleSubmitForm = (event) => (\n    // alert(\"Full Name: \" + new FormData(event.target).get('meal')),\n    event.preventDefault(),\n    fetch('/Step2', {\n        method: 'POST',\n        body: new FormData(event.target),\n      })\n  );\n  const handleChangeNumPeople = (event) => (\n    setNumPeople(event.target.value)\n  );\n  const handleChangeMeal = (event) => (\n    setMeal(event.target.value)\n  );\n  return (\n    <div>\n        <Header navAction={'actionStep1'}/>\n        <form action=\"/Step2\" method=\"POST\">\n        <div className=\"form1\">\n            <label>Please Select a meal</label><br/><br/>\n            <select className=\"select-container\" name=\"meal\" required \n                value={meal}\n                onChange={event => handleChangeMeal(event)}>\n                {dataMeal.map((meal) => <option key={meal.key} value={meal.key}>{meal.name}</option>)}\n            </select>\n            <br/><br/><br/>\n            <label>Please Enter Number of people</label><br/><br/>\n            <input type=\"number\" min=\"1\" max=\"10\" className=\"ipNumber\" name=\"numPeople\" required \n            value={numPeople}\n            onChange={event => handleChangeNumPeople(event)}/>\n        </div>\n        <div className=\"btnFooter\">\n            <input className=\"btnNext\" type=\"submit\" value=\"Next\" />\n        </div>\n        </form>\n    </div>\n  );\n}\nexport default Step1;","import React, {useState,useEffect} from 'react';\nimport dishes from \"../../data/dishes.json\";\nimport Header from '../../components/Header/Header';\n\nfunction Step2(props) {\n  // const dataRestaurant = [];\n  const [dataRestaurant, setDataRestaurant] = useState([]);\n  const [dishe, setDishe] = useState('');\n  useEffect(() => {\n    dishes.dishes.forEach(dishe => {\n      if(dishe.availableMeals.indexOf(props.key)>0 && dataRestaurant.indexOf(dishe.restaurant)<0){\n        dataRestaurant.push(dishe.restaurant);\n      }\n    });\n    setDataRestaurant(dataRestaurant);\n    // alert(props.key);\n  });\n  // alert(dataRestaurant);\n  const handleSubmitForm = (event) => (\n    event.preventDefault(),\n    fetch('/Step3', {\n        method: 'POST',\n        body: new FormData(event.target),\n      })\n  );\n  const handleChangeDishe = (event) => (\n    setDishe(event.target.value)\n  );\n  const handleBack=()=> {\n    props.history.push('/fabbi-test/Step1');\n  }\n    return (\n      <div>\n        <Header navAction={'actionStep2'}/>\n        <form action=\"/Step3\" method=\"POST\">\n          <div className=\"form2\">\n            <label>Please Select a Restaurant</label><br/><br/>\n            <select className=\"select-container\" name=\"dishe\" required\n              value={dishe}\n              onChange={event => handleChangeDishe(event)}>\n              {dishes.dishes.map((dishes) => <option key={dishes.id} value={dishes.id}>{dishes.restaurant}</option>)}\n            </select><br/><br/><br/>\n          </div>\n          <div className=\"btnFooter\">\n              <button onClick={handleBack} className=\"btnPrevious\" type=\"button\">Previous</button>\n              <input className=\"btnNext\" type=\"submit\" value=\"Next\" />\n          </div>\n        </form>\n      </div>\n    );\n  }\n\nexport default Step2;","import React, {useState,useEffect} from 'react';\nimport dishes from \"../../data/dishes.json\";\nimport Header from '../../components/Header/Header';\n\nfunction Step3(props) {\n  const [dataDish, setDataDish] = useState([]);\n  const [dish, setDish] = useState('breakfast');\n  const [numServing, setNumServing] = useState('1');\n  useEffect(() => {\n    dishes.dishes.forEach(dishe => {\n      if(dishe.availableMeals.indexOf(props.key)>0 && dataDish.indexOf(dishe.restaurant)<0){\n        dataDish.push(dishe.restaurant);\n      }\n    });\n    setDataDish(dataDish);\n    // alert(props.key);\n  });\n  // alert(dataDish);\n  const handleSubmitForm = (event) => (\n    event.preventDefault(),\n    fetch('/Review', {\n        method: 'POST',\n        body: new FormData(event.target),\n      })\n  );\n  const handleChangeDish = (event) => (\n    setDish(event.target.value)\n  );\n  const handleChangeNumServing = (event) => (\n    setNumServing(event.target.value)\n  );\n  const handleBack=()=> {\n    props.history.push('/fabbi-test/Step2');\n  }\n  return (\n    <div>\n        <Header navAction={'actionStep3'}/>\n        <form action=\"/Review\" method=\"POST\">\n          <div>\n              <table className=\"form3\">\n                  <td>\n                      <label>Please Select a Dish</label><br/><br/>\n                      <select className=\"select-container\" name=\"dish\" required \n                          value={dish}\n                          onChange={event => handleChangeDish(event)}>\n                          {dishes.dishes.map((dish) => <option key={dish.key} value={dish.key}>{dish.name}</option>)}\n                      </select><br/><br/><br/>\n                  </td>\n                  <td>\n                      <label>Please enter no. of servings</label><br/><br/>\n                      <input type=\"number\" min=\"1\" max=\"10\" className=\"ipNumber\" name=\"numServing\" required \n                        value={numServing}\n                        onChange={event => handleChangeNumServing(event)}/>\n                  </td>\n              </table>\n          </div>\n          <div className=\"btnFooter\">\n              <button onClick={handleBack} className=\"btnPrevious\" type=\"button\">Previous</button>\n              <input className=\"btnNext\" type=\"submit\" value=\"Next\" />\n          </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Step3;","import React from 'react';\nimport Header from '../../components/Header/Header';\n\nfunction Review(props) {\n  const handleBack=()=> {\n    props.history.push('/fabbi-test/Step3');\n  }\n  return (\n    <div>\n        <Header navAction={'actionReview'}/>\n        <form action=\"/Review\" method=\"POST\">\n          <table className=\"reviewDetail\">\n              <tr>\n                  <td style={{minWidth:200}}>\n                      <p>Meal</p>\n                      <p>No. of People</p>\n                      <p>Restaurant</p>\n                      <p>Dishes</p>\n                  </td>\n                  <td>\n                      <p>Lunch</p>\n                      <p>3</p>\n                      <p>Restaurant A</p>\n                      <p className=\"box-order\">Dish A - 1</p>\n                  </td>\n              </tr>\n          </table>\n        <div className=\"btnFooter\">\n          <button onClick={handleBack} className=\"btnPrevious\" type=\"button\">Previous</button>\n          <button className=\"btnNext\" type=\"button\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Review;","import React from 'react';\nimport './App.css';\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport Step1 from \"./pages/Step1/Step1\";\nimport Step2 from \"./pages/Step2/Step2\";\nimport Step3 from \"./pages/Step3/Step3\";\nimport Review from \"./pages/Review/Review\";\n\nimport './components/Main/Main.css';\nimport Main from './components/Main/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <main>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/fabbi-test/Step1\" component={Step1} />\n            <Route exact path=\"/fabbi-test/Step2\" component={Step2} />\n            <Route exact path=\"/fabbi-test/Step3\" component={Step3} />\n            <Route exact path=\"/fabbi-test/Review\" component={Review} />\n          </Switch>\n        </BrowserRouter>\n      </main>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>, document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}